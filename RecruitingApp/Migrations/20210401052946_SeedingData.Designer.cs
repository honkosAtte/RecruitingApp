// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitingApp.Data;

namespace RecruitingApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210401052946_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecruitingApp.Data.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Application = "Haen tähän paikkaan, koska haen tähän paikkaan",
                            Email = "atte.henkonen@outlook.com",
                            FirstName = "Atte",
                            JobId = 1,
                            LastName = "Henkonen"
                        },
                        new
                        {
                            Id = 2,
                            Application = "Haen tähän paikkaan, koska tarvitsen rahaa",
                            Email = "markku.miettinen@outlook.com",
                            FirstName = "Markku",
                            JobId = 2,
                            LastName = "Miettinen"
                        },
                        new
                        {
                            Id = 3,
                            Application = "Haen tähän paikkaan, koska haluan rapata",
                            Email = "atte.henkonen@outlook.com",
                            FirstName = "Atte",
                            JobId = 3,
                            LastName = "Henkonen"
                        });
                });

            modelBuilder.Entity("RecruitingApp.Data.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = ".Net, SQL, Entity Framework",
                            Name = "Ohjelmistosuunnittelija"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pensselit, ja vesivärit",
                            Name = "Taitelija"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Haetaan rakennusalan ammattilaista",
                            Name = "Rappari"
                        });
                });

            modelBuilder.Entity("RecruitingApp.Data.Applicant", b =>
                {
                    b.HasOne("RecruitingApp.Data.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });
#pragma warning restore 612, 618
        }
    }
}
